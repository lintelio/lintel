// Cushion
// -------
@mixin cushion($name, $property, $modifier: "", $x: 0, $y: 0) {
  @if $modifier != "" {
    $modifier: "-" + $modifier;
  }
  @if $y == 0 {
    $y: $x;
  }
  .#{$name}#{$modifier}        { #{$property}: $y $x; }
  .#{$name}-y#{$modifier}      { #{$property}-top: $y; #{$property}-bottom: $y; }
  .#{$name}-x#{$modifier}      { #{$property}-left: $x; #{$property}-right: $x; }
  .#{$name}-top#{$modifier}    { #{$property}-top: $y; }
  .#{$name}-right#{$modifier}  { #{$property}-right: $x; }
  .#{$name}-bottom#{$modifier} { #{$property}-bottom: $y; }
  .#{$name}-left#{$modifier}   { #{$property}-left: $x; }
}


// Borders
// -------
@mixin border($color, $modifier: "", $style: solid, $width: 1px) {
  @if $modifier != "" {
    $modifier: "-" + $modifier;
  }
  .border#{$modifier}        { border: $width $style $color; }
  .border-color#{$modifier}  { border-color: $color;}
  .border-y#{$modifier}      { border-top: $width $style $color; border-bottom: $width $style $color; }
  .border-x#{$modifier}      { border-left: $width $style $color; border-right: $width $style $color; }
  .border-top#{$modifier}    { border-top: $width $style $color; }
  .border-right#{$modifier}  { border-right: $width $style $color; }
  .border-bottom#{$modifier} { border-bottom: $width $style $color; }
  .border-left#{$modifier}   { border-left: $width $style $color; }
}


// Visibility
// ----------
@mixin visible($name, $screen-min, $screen-max) {
  .visible-#{$name}-block,
  .visible-#{$name}-inline,
  .visible-#{$name}-inline-block {
    display: none !important;
  }

  @if $screen-min > 0 {
    .visible-#{$name}-min-block,
    .visible-#{$name}-min-inline,
    .visible-#{$name}-min-inline-block,
    .visible-#{$name}-max-block,
    .visible-#{$name}-max-inline,
    .visible-#{$name}-max-inline-block {
      @extend .visible-#{$name}-block,
    }

    @media screen and (min-width: $screen-min) and (max-width: $screen-max) {
      .visible-#{$name}-block        { display: block !important; }
      .visible-#{$name}-inline       { display: inline !important; }
      .visible-#{$name}-inline-block { display: inline-block !important; }
    }

    @media screen and (min-width: $screen-min) {
      .visible-#{$name}-min-block        { display: block !important; }
      .visible-#{$name}-min-inline       { display: inline !important; }
      .visible-#{$name}-min-inline-block { display: inline-block !important; }
    }

    @media screen and (max-width: $screen-max) {
      .visible-#{$name}-max-block        { display: block !important; }
      .visible-#{$name}-max-inline       { display: inline !important; }
      .visible-#{$name}-max-inline-block { display: inline-block !important; }
    }
  }
  @else {
    @media screen and (max-width: $screen-max) {
      .visible-#{$name}-block        { display: block !important; }
      .visible-#{$name}-inline       { display: inline !important; }
      .visible-#{$name}-inline-block { display: inline-block !important; }
    }
  }
}

@mixin hidden($name, $screen-min, $screen-max) {
  @if $screen-min > 0 {
    @media screen and (min-width: $screen-min) and (max-width: $screen-max) {
      .hidden-#{$name} {
        display: none !important;
      }
    }
    @media screen and (min-width: $screen-min) {
      .hidden-#{$name}-min {
        display: none !important;
      }
    }
    @media screen and (max-width: $screen-max) {
      .hidden-#{$name}-max {
        display: none !important;
      }
    }
  }
  @else {
    @media screen and (max-width: $screen-max) {
      .hidden-#{$name} {
        display: none !important;
      }
    }
  }
}


// Floats
// -----
@mixin float($name, $screen-min, $screen-max) {
  @each $direction in left, right, none {
    @if $screen-min > 0 {
      @media screen and (min-width: $screen-min) and (max-width: $screen-max) {
        .float-#{$name}-#{$direction} {
          float: $direction !important;
        }
      }
      @media screen and (min-width: $screen-min) {
        .float-#{$name}-min-#{$direction} {
          float: $direction !important;
        }
      }
      @media screen and (max-width: $screen-max) {
        .float-#{$name}-max-#{$direction} {
          float: $direction !important;
        }
      }
    }
    @else {
      @media screen and (max-width: $screen-max) {
        .float-#{$name}-#{$direction} {
          float: $direction !important;
        }
      }
    }
  }
}


// Center
// ------
@mixin center($y: true, $x: false) {
  @if $y {
    position: absolute;
    top: 50%;
    right: 0;
    left: 0;
    transform: translateY(-50%);
  }
  @if $x {
    text-align: center;
  }
}



// Clearfix
// --------
@mixin clearfix {
  &:before,
  &:after {
    content: " ";
    display: table;
  }

  &:after {
    clear: both;
  }
}


// Media Queries
// -------------
@mixin mq($min: 0, $max: 0) {
  @if $min > 0 and $max > 0 {
    @media screen and (min-width: $min / $font-size-base * 1em) and (max-width: $max / $font-size-base * 1em) {
        @content;
    }
  }
  @else if $max > 0 {
    @media screen and (max-width: $max / $font-size-base * 1em) {
        @content;
    }
  }
  @else if $min > 0 {
    @media screen and (min-width: $min / $font-size-base * 1em) {
        @content;
    }
  }
  @else {
    @content;
  }
}


// Triangle
// --------
// Credit: https://github.com/thoughtbot/bourbon/blob/master/app/assets/stylesheets/addons/_triangle.scss
@mixin triangle($size, $color, $direction) {
  height: 0;
  width: 0;

  $width: nth($size, 1);
  $height: nth($size, length($size));

  $foreground-color: nth($color, 1);
  $background-color: if(length($color) == 2, nth($color, 2), transparent);

  @if ($direction == up) or ($direction == down) or ($direction == right) or ($direction == left) {

    $width: $width / 2;
    $height: if(length($size) > 1, $height, $height/2);

    @if $direction == up {
      border-left: $width solid $background-color;
      border-right: $width solid $background-color;
      border-bottom: $height solid $foreground-color;

    } @else if $direction == right {
      border-top: $width solid $background-color;
      border-bottom: $width solid $background-color;
      border-left: $height solid $foreground-color;

    } @else if $direction == down {
      border-left: $width solid $background-color;
      border-right: $width solid $background-color;
      border-top: $height solid $foreground-color;

    } @else if $direction == left {
      border-top: $width solid $background-color;
      border-bottom: $width solid $background-color;
      border-right: $height solid $foreground-color;
    }
  }

  @else if ($direction == up-right) or ($direction == up-left) {
    border-top: $height solid $foreground-color;

    @if $direction == up-right {
      border-left:  $width solid $background-color;

    } @else if $direction == up-left {
      border-right: $width solid $background-color;
    }
  }

  @else if ($direction == down-right) or ($direction == down-left) {
    border-bottom: $height solid $foreground-color;

    @if $direction == down-right {
      border-left:  $width solid $background-color;

    } @else if $direction == down-left {
      border-right: $width solid $background-color;
    }
  }

  @else if ($direction == inset-up) {
    border-width: $height $width;
    border-style: solid;
    border-color: $background-color $background-color $foreground-color;
  }

  @else if ($direction == inset-down) {
    border-width: $height $width;
    border-style: solid;
    border-color: $foreground-color $background-color $background-color;
  }

  @else if ($direction == inset-right) {
    border-width: $width $height;
    border-style: solid;
    border-color: $background-color $background-color $background-color $foreground-color;
  }

  @else if ($direction == inset-left) {
    border-width: $width $height;
    border-style: solid;
    border-color: $background-color $foreground-color $background-color $background-color;
  }
}
